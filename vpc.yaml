# 11/10 create 2 public subnets, 6 private subnets, 3 private & 1 public route tables, 1 NAT GW(Public1), 1 Internet GW
# 11/11 +3 SGs, 1 APP1 instance
# 11/13 + instance private IP parameters, default customer RDP source IP parameter, instance termination protect,
# 11/15 + ALB SG, ALB, APP2 instance, certificate, ALB TG, ALB listener
# to-do:  volume iops wrong, load balancer, COMM&DB SG, instances

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: TestEnv

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.192.0.0/16

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.192.10.0/24

  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.192.11.0/24

  PrivateSubnetAPP1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.192.20.0/24

  PrivateSubnetAPP2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.192.21.0/24

  PrivateSubnetDB1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.192.30.0/24

  PrivateSubnetDB2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.192.31.0/24

  PrivateSubnetCOMM1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.192.40.0/24

  PrivateSubnetCOMM2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.192.41.0/24

  InstanceTypeAPP:
    Type: String
    Default: t3.small
  
  PrivateIpAPP1:
    Type: String
    Default: 10.192.20.10
  
  PrivateIpAPP2:
    Type: String
    Default: 10.192.21.10
  
  PrivateIpDB1:
    Type: String
    Default: 10.192.30.10

  PrivateIpDB2:
    Type: String
    Default: 10.192.31.10

  PrivateIpCOMM1:
    Type: String
    Default: 10.192.40.10

  PrivateIpCOMM2:
    Type: String
    Default: 10.192.41.10

  AMI:
    Type: String
    Default: ami-005f8adf84f8c5057  #Microsoft Windows Server 2022 Full Locale English AMI provided by Amazon

  RDPSourceIP:
    Type: String
    Default: 10.1.5.15/32

  APPURL:
    Type: String
    Default: *.infoshare.cloud

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} VPC
        - Key: Project
          Value: !Ref EnvironmentName


  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} IG
        - Key: Project
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  PrivateSubnetAPP1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnetAPP1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} APP Private Subnet1
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  PrivateSubnetAPP2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnetAPP2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} APP Private Subnet2
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  PrivateSubnetDB1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnetDB1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} DB Private Subnet1
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  PrivateSubnetDB2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnetDB2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} DB Private Subnet2
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  PrivateSubnetCOMM1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnetCOMM1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} COMM Private Subnet1
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  PrivateSubnetCOMM2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnetCOMM2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} COMM Private Subnet2
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2


  PrivateAPPRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} APP Routes
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  DefaultPrivateRouteAPP:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateAPPRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateDBRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} DB Routes
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  DefaultPrivateRouteDB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateDBRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateCOMMRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} COMM Routes
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  DefaultPrivateRouteCOMM:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateCOMMRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateAPPRouteTable
      SubnetId: !Ref PrivateSubnetAPP1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateAPPRouteTable
      SubnetId: !Ref PrivateSubnetAPP2

  PrivateSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateDBRouteTable
      SubnetId: !Ref PrivateSubnetDB1

  PrivateSubnet4RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateDBRouteTable
      SubnetId: !Ref PrivateSubnetDB2

  PrivateSubnet5RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateCOMMRouteTable
      SubnetId: !Ref PrivateSubnetCOMM1

  PrivateSubnet6RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateCOMMRouteTable
      SubnetId: !Ref PrivateSubnetCOMM2

  NoIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "no-ingress-sg"
      GroupDescription: "Security group with no ingress rule"
      VpcId: !Ref VPC

  SecurityGroupAPP:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "APP SG"
      GroupDescription: "SG For APP"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !Ref VpcCIDR
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: !Ref RDPSourceIP
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} APP SG
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  SecurityGroupDB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "DB SG"
      GroupDescription: "SG For DB"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !Ref VpcCIDR
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: !Ref RDPSourceIP
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} DB SG
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  SecurityGroupCOMM:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "COMM SG"
      GroupDescription: "SG For COMM"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !Ref VpcCIDR
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: !Ref RDPSourceIP
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} COMM SG
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  SecurityGroupLBAPP:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "LB APP SG"
      GroupDescription: "SG For LB APP"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} LB APP SG
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  InstanceAPP1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AMI
      InstanceType: !Ref InstanceTypeAPP
      SubnetId: !Ref PrivateSubnetAPP1
      DisableApiTermination: true
      SecurityGroupIds: 
        - !Ref SecurityGroupAPP
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs: 
            VolumeSize: 50
        - DeviceName: xvdb
          Ebs:
            VolumeSize: 50
            VolumeType: gp3
            Iops: 2000
            Encrypted: true
            KmsKeyId: alias/aws/ebs
            DeleteOnTermination: false
      PrivateIpAddress: !Ref PrivateIpAPP1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} APP1
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  InstanceAPP2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AMI
      InstanceType: !Ref InstanceTypeAPP
      SubnetId: !Ref PrivateSubnetAPP2
      DisableApiTermination: true
      SecurityGroupIds: 
        - !Ref SecurityGroupAPP
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs: 
            VolumeSize: 50
        - DeviceName: xvdb
          Ebs:
            VolumeSize: 50
            VolumeType: gp3
            Iops: 2000
            Encrypted: true
            KmsKeyId: alias/aws/ebs
            DeleteOnTermination: false
      PrivateIpAddress: !Ref PrivateIpAPP2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} APP2
        - Key: Project
          Value: !Ref EnvironmentName
        - Key: Stage
          Value: Prod

  APPLBCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: infoshare.cloud
      DomainValidationOptions:
        - DomainName: infoshare.cloud
          HostedZoneId: Z0350819F9BVL1CZ8HW4
      SubjectAlternativeNames:
        - !Ref APPURL
      ValidationMethod: DNS

  APPLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${EnvironmentName} APP ALB
      Scheme: internet-facing
      Subnets:
        - !Ref PrivateSubnetAPP1
        - !Ref PrivateSubnetAPP2
      Type: application

  APPLoadBalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${EnvironmentName} APP Target
      Port: 443
      Protocol: HTTPS
      VpcId: !Ref VPC
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 10
      HealthCheckPort: 443
      HealthCheckProtocol: HTTPS
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: true
      Targets:
        - Id: !Ref PrivateIpAPP1
          Port: 443
        - Id: !Ref PrivateIpAPP2
          Port: 443
      TargetType: ip
      
  APPLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn: APPLBCertificate
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref APPLoadBalancerTargetGroup
      LoadBalancerArn: !Ref APPLoadBalancer
      Port: '443'
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06
      Certificates:
        - CertificateArn: !Ref APPLBCertificate

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]

  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnetAPP1, !Ref PrivateSubnetAPP2, !Ref PrivateSubnetDB1, !Ref PrivateSubnetDB2, !Ref PrivateSubnetCOMM2, !Ref PrivateSubnetCOMM2 ]]

  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1

  PublicSubnet2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2

  PrivateSubnetAPP1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnetAPP1

  PrivateSubnetAPP2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnetAPP2

  PrivateSubnetDB1:
    Description: A reference to the private subnet in the 1nd Availability Zone
    Value: !Ref PrivateSubnetDB1

  PrivateSubnetDB2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnetDB2

  PrivateSubnetCOMM1:
    Description: A reference to the private subnet in the 1nd Availability Zone
    Value: !Ref PrivateSubnetCOMM1

  PrivateSubnetCOMM2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnetCOMM2

  #Instances:
  #  Description: A list of the instances
  #  Value: !Join [ ",", [ !Ref InstanceAPP1, !Ref InstanceAPP2, !Ref InstanceDB1, !Ref InstanceDB2, !Ref InstanceCOMM2, !Ref InstanceCOMM2 ]]
